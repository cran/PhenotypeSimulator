% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/variancecomponentFunctions.R
\name{noiseFixedEffects}
\alias{noiseFixedEffects}
\title{Simulate noise fixed effects.}
\usage{
noiseFixedEffects(N, P, NrFixedEffects = 1, NrConfounders = 10,
  pIndependentConfounders = 0.4, pTraitIndependentConfounders = 0.2,
  distConfounders = "norm", mConfounders = 0, sdConfounders = 1,
  catConfounders = NULL, probConfounders = NULL, distBeta = "norm",
  mBeta = 0, sdBeta = 1, NrConfoundersString = NULL,
  pIndependentConfoundersString = NULL,
  pTraitIndependentConfoundersString = NULL, distConfoundersString = NULL,
  mConfoundersString = NULL, sdConfoundersString = NULL,
  catConfoundersString = NULL, probConfoundersString = NULL,
  distBetaString = NULL, mBetaString = NULL, sdBetaString = NULL)
}
\arguments{
\item{N}{number [integer] of samples to simulate}

\item{P}{number [integer] of phenotypes to simulate}

\item{NrFixedEffects}{number [integer] of different fixed effects to simulate
; allows to simulate fixed effects from different distributions or with 
 differen parameters}

\item{NrConfounders}{vector of number(s) [integer] of confounders to simulate}

\item{pIndependentConfounders}{vector of proportion(s) [double] of noise 
effects (confounders) to have a trait-independent effect}

\item{pTraitIndependentConfounders}{vector of proportion(s) [double] of 
traits influenced by independent fixed noise effects}

\item{distConfounders}{vector of name(s) [string] of distribution to use to 
simulate confounders; one of "unif", "norm", "bin", "cat_norm", "cat_unif"}

\item{mConfounders}{vector of mean/midpoint(s) [double] of normal/uniform 
distribution for confounders}

\item{sdConfounders}{vector of standard deviation(s)/distance from 
midpoint(s) [double] of normal/uniform distribution for confounders}

\item{catConfounders}{vector of number(s) of confounder categories [integer]; 
required if distConfounders "cat_norm" or "cat_unif"}

\item{probConfounders}{vector of probability(s) [double] of binomial 
confounders (0/1); required if distConfounders "bin"}

\item{distBeta}{vector of name(s) [string] of distribution to use to simulate 
effect sizes of confounders; one of "unif" or "norm"}

\item{mBeta}{vector of mean/midpoint [double] of normal/uniform distribution 
for effect sizes of confounders}

\item{sdBeta}{vector of standard deviation/distance from midpoint [double] 
of normal/uniform distribution for effect sizes of confounders}

\item{NrConfoundersString}{alternative to NrConfounder, a comma-separated
[string] with number(s) [integer] of confounders to simulate; typically used 
when run as command line application}

\item{pIndependentConfoundersString}{alternative to pIndependentConfounders,
a comma-separated [string] with proportion(s) [double] of noise effects 
(confounders) to have a trait-independent effect; typically used when run as 
command line application}

\item{pTraitIndependentConfoundersString}{alternative to 
pTraitIndependentConfounders,  a comma-separated [string] with proportion(s) 
[double] of traits influenced by independent fixed noise effects; typically 
used when run as command line application}

\item{distConfoundersString}{alternative to distConfounders, a comma-
separated [string] with name(s) [string] of distributions to use to 
simulate confounders; one of "unif", "norm", "bin", "cat_norm", "cat_unif";
typically used when run as command line application}

\item{mConfoundersString}{alternative to mConfounders, a comma-
separated [string] with of mean/midpoint(s) [double] of normal/uniform 
distribution for confounders; typically used when run as command line 
application}

\item{sdConfoundersString}{alternative to sdConfounders, a comma-
separated [string] with standard deviation(s)/distance from 
midpoint(s) [double] of normal/uniform distribution for confounders; 
typically used when run as command line application}

\item{catConfoundersString}{alternative to catConfounders, a comma-
separated [string] with the number of confounder categories [integer]; 
required if distConfounders "cat_norm" or "cat_unif"; 
typically used when run as command line application}

\item{probConfoundersString}{alternative to probConfounders, a comma-
separated [string] with probability(s) [double] of binomial 
confounders (0/1); required if distConfounders "bin"; typically used
 when run as command line application}

\item{distBetaString}{alternative to distBeta, a comma-separated [string] 
with name(s) [string] of distribution to use to simulate effect sizes of 
confounders; one of "unif" or "norm"; typically used when run as command line 
application}

\item{mBetaString}{alternative to mBeta, a comma- separated [string] with 
means/midpoints [double] of normal/uniform distribution for effect sizes of 
confounders; typically used when run as command line application}

\item{sdBetaString}{alternative to sdBeta, a comma- separated [string] with 
standard deviation/distance from midpoint [double] of normal/uniform 
distribution for effect sizes of confounders; typically used when run as 
command line application}
}
\value{
named list of shared fixed noise effects (shared: [N x P] matrix), 
independent fixed noise effects (independent: [N x P] matrix), 
the causal SNPs named by having a shared or independent effect 
(cov: [NrConfounders x N] matrix) and the simulated effect sizes of the 
confounders
(cov_effect: [P x NrConfounders] dataframe)
}
\description{
noiseFixedEffects simulates a number of fixed noise effects 
(confounders). Confounders can have effects across all traits (shared) 
or to a number of traits only (independent); the proportion of independent 
confounders from the total of simulated confounders can be chosen via 
pIndependentConfounders. The number of traits that are associated with 
independent noise effects can be chosen via  pTraitIndependentConfounders. 
Confounders can be simulated as categorical variables or following a binomial 
, uniform or normal distribution. Effect sizes for the noise effects can be 
simulated from a uniform or normal distribution. Multiple confounder sets 
drawn from different distributions/different parameters of the same 
distribution can be simulated by specifying NrFixedEffects and supplying the 
respective distribution parameters (*Confounders and *Beta) explained below. 
If a model parameter and its "String' version are provided, i.e. 
NrConfounders and NrConfoundersStrings, the "String' specification will be 
used!
}
\examples{
# fixed noise effect with default setting
noiseFE <- noiseFixedEffects(P=5, N=20)

# 1 categorical fixed noise effect with uniform distribution of the 
# categories
noiseFE_catUnif <- noiseFixedEffects(P=10, N=20, NrConfounders=1, 
distConfounders="cat_unif", catConfounders=3)

# 10 fixed noise effect with uniform distribution between 1 and 5 (3 +/- 2) 
# categories
noiseFE_uniformConfounders_normBetas <- noiseFixedEffects(P=10, N=20, 
NrConfounders=10, distConfounders="unif", mConfounders=3, sdConfounders=2, 
distBeta="norm",  sdBeta=2)

 # 4 fixed noise effect with binomial distribution with p=0.2 
noiseFE_binomialConfounders_uniformBetas <- noiseFixedEffects(P=10, N=20, 
NrConfounders=4, distConfounders="bin", probConfounders=0.2, distBeta="norm", 
sdBeta=2)

 # 4 fixed noise effect with 2 binomial confounders and 2 normally 
 # distributed confounders 
 noiseFE_binomialandNormalConfounders <- noiseFixedEffects(P=10, N=20, 
 NrFixedEffects=2, NrConfounders=c(2,2), distConfounders=c("bin", "norm"), 
 probConfounders=0.2)
}
\seealso{
\code{\link{simulateDist}}
}
